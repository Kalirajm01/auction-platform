{"ast":null,"code":"import React, { useState } from 'react';\nimport '../../css/sellerform.css';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\n\n// const SellerForm = () => {\n//   const navigate = useNavigate();\n\n//   const [itemName, setItemName] = useState('');\n//   const [startingPrice, setStartingPrice] = useState('');\n//   const [auctionStartTime, setAuctionStartTime] = useState('');\n//   const [auctionEndTime, setAuctionEndTime] = useState('');\n//   const [bidinc, setbidinc] = useState('');\n//   const [productImage, setProductImage] = useState(null);\n//   const [description, setDescription] = useState('');\n//   const [error, setError] = useState('');\n\n//   const handleListing = async (e) => {\n//       e.preventDefault();\n\n//     try {\n//       const response = await fetch('http://localhost:8080/api/auctions/create', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({\n//             itemName,\n//             startingPrice: parseFloat(startingPrice),\n//             auctionStartTime,\n//             auctionEndTime,\n//             bidIncrement: parseFloat(bidinc),\n//             productImage,\n//             description\n//         }),\n//       });\n\n//       if (response.ok) {\n//         // Assume a successful added the auction after a short delay\n//         await new Promise((resolve) => setTimeout(resolve, 1000));\n\n//         // Redirect to the seller home page after successful adding the auction\n//         navigate('/sellerhome');\n//       } else {\n//         const errorMessage = await response.text();\n//         setError(`Error during signup: ${errorMessage}`);\n//       }\n//     } catch (error) {\n//       setError('Error during signup. Please try again.');\n//     }\n\n//        // Add your logic to handle item listing, including the product image\n//        console.log('Item listed successfully!');\n//        console.log('Item Name:', itemName);\n//        console.log('Starting Price:', startingPrice);\n//        console.log('Bid Increament:', bidinc);\n//        console.log('Auction Start Time:', auctionStartTime);\n//        console.log('Auction End Time:', auctionEndTime);\n//        console.log('Product Image:', productImage);\n//        console.log('Description:', description);\n//   };\n\n//   const handleImageChange = (e) => {\n//     const file = e.target.files[0];\n//     setProductImage(file);\n//   };\n\n//   const handleBack = () => {\n//     // Redirect to the home page\n//     navigate('/sellerhome');\n//   };\n\n//   const handlestartingprice = (e) => {\n//     const input = e.target.value;\n//     // Check if input is a valid number (integer)\n//     if (/^\\d*$/.test(input)) {\n//       setStartingPrice(input);\n//     }\n//   };\n\n//   const handlebidinc = (e) => {\n//     const input = e.target.value;\n//     // Check if input is a valid number (integer)\n//     if (/^\\d*$/.test(input)) {\n//       setbidinc(input);\n//     }\n//   };\n\n//   return (\n//     <div className=\"seller-form-wrapper\">\n//       <Helmet>\n//         <meta charset=\"utf-8\" />\n//         <link rel=\"icon\" href=\"img/favicon.png\" />\n//         <link rel=\"apple-touch-icon\" href=\"img/favicon.png\" />\n//         <title>Auction Platform</title>\n//       </Helmet>\n//       <h1>Auction Platform Seller Dashboard</h1>\n//       <button className=\"back-button\" onClick={handleBack}>Back</button>\n//       <div className=\"seller-form-container\">\n//         <h2>List Item</h2>\n//         <label>Item Name:</label>\n//         <input type=\"text\" value={itemName} onChange={(e) => setItemName(e.target.value)} />\n\n//         <label>Starting Price:</label>\n//         <input type=\"tel\" pattern=\"[0-9]*\" value={startingPrice} onChange={handlestartingprice} />\n\n//         <label>Auction Start Time:</label>\n//         <input type=\"datetime-local\" value={auctionStartTime} onChange={(e) => setAuctionStartTime(e.target.value)} />\n\n//         <label>Auction End Time:</label>\n//         <input type=\"datetime-local\" value={auctionEndTime} onChange={(e) => setAuctionEndTime(e.target.value)} />\n\n//         <label>Bid Increment: </label>\n//         <input type=\"tel\" pattern=\"[0-9]*\" value={bidinc} onChange={handlebidinc} />\n\n//         <label>Product Image:</label>\n//         <input type=\"file\" onChange={handleImageChange} />\n\n//         <label>Description:</label>\n//         <textarea value={description} onChange={(e) => setDescription(e.target.value)} />\n\n//         <button onClick={handleListing}>List Item</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default SellerForm;","map":{"version":3,"names":["React","useState","Link","useNavigate","Helmet"],"sources":["D:/04.02.2024/05.02.2024/auction-frontend/src/pages/seller/sellproduct.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../../css/sellerform.css';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet';\r\n\r\n// const SellerForm = () => {\r\n//   const navigate = useNavigate();\r\n\r\n//   const [itemName, setItemName] = useState('');\r\n//   const [startingPrice, setStartingPrice] = useState('');\r\n//   const [auctionStartTime, setAuctionStartTime] = useState('');\r\n//   const [auctionEndTime, setAuctionEndTime] = useState('');\r\n//   const [bidinc, setbidinc] = useState('');\r\n//   const [productImage, setProductImage] = useState(null);\r\n//   const [description, setDescription] = useState('');\r\n//   const [error, setError] = useState('');\r\n\r\n//   const handleListing = async (e) => {\r\n//       e.preventDefault();\r\n\r\n//     try {\r\n//       const response = await fetch('http://localhost:8080/api/auctions/create', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify({\r\n//             itemName,\r\n//             startingPrice: parseFloat(startingPrice),\r\n//             auctionStartTime,\r\n//             auctionEndTime,\r\n//             bidIncrement: parseFloat(bidinc),\r\n//             productImage,\r\n//             description\r\n//         }),\r\n//       });\r\n\r\n//       if (response.ok) {\r\n//         // Assume a successful added the auction after a short delay\r\n//         await new Promise((resolve) => setTimeout(resolve, 1000));\r\n\r\n//         // Redirect to the seller home page after successful adding the auction\r\n//         navigate('/sellerhome');\r\n//       } else {\r\n//         const errorMessage = await response.text();\r\n//         setError(`Error during signup: ${errorMessage}`);\r\n//       }\r\n//     } catch (error) {\r\n//       setError('Error during signup. Please try again.');\r\n//     }\r\n\r\n//        // Add your logic to handle item listing, including the product image\r\n//        console.log('Item listed successfully!');\r\n//        console.log('Item Name:', itemName);\r\n//        console.log('Starting Price:', startingPrice);\r\n//        console.log('Bid Increament:', bidinc);\r\n//        console.log('Auction Start Time:', auctionStartTime);\r\n//        console.log('Auction End Time:', auctionEndTime);\r\n//        console.log('Product Image:', productImage);\r\n//        console.log('Description:', description);\r\n//   };\r\n    \r\n\r\n//   const handleImageChange = (e) => {\r\n//     const file = e.target.files[0];\r\n//     setProductImage(file);\r\n//   };\r\n\r\n//   const handleBack = () => {\r\n//     // Redirect to the home page\r\n//     navigate('/sellerhome');\r\n//   };\r\n\r\n//   const handlestartingprice = (e) => {\r\n//     const input = e.target.value;\r\n//     // Check if input is a valid number (integer)\r\n//     if (/^\\d*$/.test(input)) {\r\n//       setStartingPrice(input);\r\n//     }\r\n//   };\r\n\r\n//   const handlebidinc = (e) => {\r\n//     const input = e.target.value;\r\n//     // Check if input is a valid number (integer)\r\n//     if (/^\\d*$/.test(input)) {\r\n//       setbidinc(input);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"seller-form-wrapper\">\r\n//       <Helmet>\r\n//         <meta charset=\"utf-8\" />\r\n//         <link rel=\"icon\" href=\"img/favicon.png\" />\r\n//         <link rel=\"apple-touch-icon\" href=\"img/favicon.png\" />\r\n//         <title>Auction Platform</title>\r\n//       </Helmet>\r\n//       <h1>Auction Platform Seller Dashboard</h1>\r\n//       <button className=\"back-button\" onClick={handleBack}>Back</button>\r\n//       <div className=\"seller-form-container\">\r\n//         <h2>List Item</h2>\r\n//         <label>Item Name:</label>\r\n//         <input type=\"text\" value={itemName} onChange={(e) => setItemName(e.target.value)} />\r\n\r\n//         <label>Starting Price:</label>\r\n//         <input type=\"tel\" pattern=\"[0-9]*\" value={startingPrice} onChange={handlestartingprice} />\r\n\r\n//         <label>Auction Start Time:</label>\r\n//         <input type=\"datetime-local\" value={auctionStartTime} onChange={(e) => setAuctionStartTime(e.target.value)} />\r\n\r\n//         <label>Auction End Time:</label>\r\n//         <input type=\"datetime-local\" value={auctionEndTime} onChange={(e) => setAuctionEndTime(e.target.value)} />\r\n\r\n//         <label>Bid Increment: </label>\r\n//         <input type=\"tel\" pattern=\"[0-9]*\" value={bidinc} onChange={handlebidinc} />\r\n\r\n//         <label>Product Image:</label>\r\n//         <input type=\"file\" onChange={handleImageChange} />\r\n\r\n//         <label>Description:</label>\r\n//         <textarea value={description} onChange={(e) => setDescription(e.target.value)} />\r\n\r\n//         <button onClick={handleListing}>List Item</button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default SellerForm;\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,0BAA0B;AACjC,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,SAASC,MAAM,QAAQ,cAAc;;AAEr},"metadata":{},"sourceType":"module","externalDependencies":[]}